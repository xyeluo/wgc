#!/usr/bin/env bash
#shellcheck disable=SC2154

function wgc_init() {
  # Run 'cd /etc/profile.d' in the Windows system and comment out all contents of git-prompt.sh,
  # because 'PS1' is generated by _prompt file,so the file is not needed.
  git_pr='/etc/profile.d/git-prompt.sh'
  if [ -f "$git_pr" ]; then
    mv "$git_pr" "${git_pr}_bck" && {
      echo "backup $git_pr"
      echo "to ${git_pr}_bck"
    }
  fi
  # and 'git_cpl' only exist in windows, it's used for git command completion
  git_cpl='/mingw64/share/git/completion/git-completion.bash'
  if [ -f "$git_cpl" ] && [ ! -f /etc/profile.d/git-prompt.sh ]; then
    #shellcheck disable=SC1090
    source $git_cpl
  fi
}
wgc_init

if [[ -z "$PROMPT_COMMAND" ]]; then
  PROMPT_COMMAND='exit_code=$?'
elif ! [[ $PROMPT_COMMAND =~ exit_code ]]; then
  PROMPT_COMMAND='exit_code=$?;'"$PROMPT_COMMAND"
fi

function _get_git_branch() {
  # copied at https://gist.github.com/bingzhangdai/dd4e283a14290c079a76c4ba17f19d69
  local _head_file _head
  local _dir="$PWD"
  while [[ -n "$_dir" ]]; do
    _head_file="$_dir/.git/HEAD"
    if [[ -f "$_dir/.git" ]]; then
      read -r _head_file <"$_dir/.git" && _head_file="$_dir/${_head_file#gitdir: }/HEAD"
    fi
    [[ -e "$_head_file" ]] && break
    _dir="${_dir%/*}"
  done
  if [[ -e "$_head_file" ]]; then
    read -r _head <"$_head_file" || return
    case "$_head" in
    ref:*) printf "%s" "${_head#ref: refs/heads/}" ;;
    "") ;;
    # HEAD detached
    *) printf "%s" "${_head:0:9}" ;;
    esac
    return 0
  fi
  return 1
}

# simple style of PS1
function simple_style() {
  _ps1_pre=''
  if [[ "$VIRTUAL_ENV" ]]; then
    _ps1_pre="($(basename "$VIRTUAL_ENV")) "
  fi
  _ps1_old=$PS1
  # shellcheck disable=SC2154
  export PS1='${_ps1_pre}\[\e[0;3;38;5;208m\]\W\[\e[0m\]$(_branch=$(_get_git_branch);if [ "$_branch" ]; then echo " \[\e[1;38;2;175;255;255m\][\[\e[0m\]\[\e[32m\]$_branch\[\e[0m\]\[\e[1;38;2;175;255;255m\]]\[\e[0m\]";fi) $(if [[ "$exit_code" -eq 0 ]]; then echo "\[\e[0;38;5;43m\]\$\[\e[0m\]";else echo "\[\e[7;31m\]\$\[\e[0m\]";fi) '
  function desimpel_style() {
    export PS1=$_ps1_old
  }
}

function _check_python_virtualenv {
  if [[ "$VIRTUAL_ENV" ]]; then
    export PS1='(`basename "$VIRTUAL_ENV"`) \[\e[38;2;175;255;255m\][\[\e[0m\] \[\e[38;2;246;229;141m\]\u@\h\[\e[0m\] \[\e[38;2;175;255;255m\]]\[\e[0m\]\[\e[38;2;175;255;255m\]-\[\e[0m\]\[\e[38;2;175;255;255m\][\[\e[0m\] \[\e[38;5;39;171;207m\]\D{%b/%d/%a}\[\e[0m\] \[\e[4;38;5;39;171;207m\]\t\[\e[0m\] \[\e[0;3;38;5;208m\]\W\[\e[0m\] \[\e[38;2;175;255;255m\]]\[\e[0m\]\[\e[38;2;175;255;255m\][\[\e[0m\]\[\e[38;5;149;175;192m\]\#:\!\[\e[0m\]\[\e[38;2;175;255;255m\]]\[\e[0m\]\n\[\e[38;2;175;255;255m\] ⮞\[\e[0m\]$(_branch=$(_get_git_branch);if [ "$_branch" ]; then echo " \[\e[1;38;2;175;255;255m\][\[\e[0m\] \[\e[32m\]$_branch\[\e[0m\] \[\e[1;38;2;175;255;255m\]]\[\e[0m\]";fi) $(if [[ "$exit_code" -eq 0 ]]; then echo "\[\e[0;38;5;43m\]\$\[\e[0m\]";else echo "\[\e[7;31m\]\$\[\e[0m\]";fi) '
    export PS2='$(echo -n "";if [[ "$exit_code" -eq 0 ]]; then echo "\[\e[0;38;5;43m\]⮞\[\e[0m\]";else echo "\[\e[1;31m\]⮞\[\e[0m\]";fi) '
  fi
}
PROMPT_COMMAND=$PROMPT_COMMAND"_check_python_virtualenv;"

export PS1='\[\e[38;2;175;255;255m\]╭──\[\e[0m\]\[\e[38;2;175;255;255m\][\[\e[0m\] \[\e[38;2;246;229;141m\]\u@\h\[\e[0m\] \[\e[38;2;175;255;255m\]]\[\e[0m\]\[\e[38;2;175;255;255m\]-\[\e[0m\]\[\e[38;2;175;255;255m\][\[\e[0m\] \[\e[38;5;39;171;207m\]\D{%b/%d/%a}\[\e[0m\] \[\e[4;38;5;39;171;207m\]\t\[\e[0m\] \[\e[0;3;38;5;208m\]\W\[\e[0m\] \[\e[38;2;175;255;255m\]]\[\e[0m\]\[\e[38;2;175;255;255m\][\[\e[0m\]\[\e[38;5;149;175;192m\]\#:\!\[\e[0m\]\[\e[38;2;175;255;255m\]]\[\e[0m\]\n\[\e[38;2;175;255;255m\]╰──⮞\[\e[0m\]$(_branch=$(_get_git_branch);if [ "$_branch" ]; then echo " \[\e[1;38;2;175;255;255m\][\[\e[0m\] \[\e[32m\]$_branch\[\e[0m\] \[\e[1;38;2;175;255;255m\]]\[\e[0m\]";fi) $(if [[ "$exit_code" -eq 0 ]]; then echo "\[\e[0;38;5;43m\]\$\[\e[0m\]";else echo "\[\e[7;31m\]\$\[\e[0m\]";fi) '
export PS2='$(echo -n " ";if [[ "$exit_code" -eq 0 ]]; then echo "\[\e[0;38;5;43m\]⮞\[\e[0m\]";else echo "\[\e[1;31m\]⮞\[\e[0m\]";fi) '
export -f _get_git_branch _check_python_virtualenv
export PROMPT_COMMAND
