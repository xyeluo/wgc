#!/usr/bin/env bash
# shellcheck disable=SC1090,SC1091,SC2016

_INSTALL_PATH="$HOME/.config/wgc"
_PROFILE_PATH="$HOME/.bash_profile"
_WGC_FILE_NOTE="Generated by wgc,If you want to modify this file, uninstall the wgc and then modify it!!!"

function _i_alias() {
  _e_init 'alias'
  local alias_path="./bash/_alias"
  local head="#!/usr/bin/env bash\n"
  source "./src/alias/main" &&
    echo -e "$head" >"$alias_path" &&
    alias >>"$alias_path"
}

function _i_prompt() {
  _e_init 'prompt'
  # Run 'cd /etc/profile.d' in the Windows system and comment out all contents of git-prompt.sh,
  # because 'PS1' is generated by _prompt file,so the file is not needed.
  local git_pr='/etc/profile.d/git-prompt.sh'
  [ -f "$git_pr" ] && _backup_file "$git_pr"

  # and 'git_cpl' only exist in windows, it's used for git command completion
  local git_cpl='/mingw64/share/git/completion/git-completion.bash'
  if [ -f "$git_cpl" ] && [ -f $git_pr ]; then
    echo -e "# $_WGC_FILE_NOTE\n" >"$git_pr"
    echo "source '$git_cpl'" >>"$git_pr"
  fi
}

function _i_profile() {
  _e_init 'profile'
  # install profile config
  # backup profile
  local profile_path="$HOME/.bash_profile"
  _backup_file "$profile_path"
  echo -e "$1" >>"$profile_path"
}

function _i_vimrc() {
  _e_init 'vimrc'
  # install vimrc config
  _backup_file "$HOME/.vimrc" '"---' '---"'
  cat "./src/.vimrc" >>"$HOME/.vimrc"
}

function _wgc_help() {
  echo -e "Usage: wgc [options]
  \nOptions:
  \t i,--install       \t add files for _prompt,_alias,and so on to home path
  \t uni,--uninstall   \t remove generated files by installation
  \t prompt,--prompt   \t only install prompt
  \t h,--help          \t output usage information
  "
  return 1
}

function _e_init() {
  echo "init $1 config..."
}

function _backup_file() {
  # if exists $_PROFILE_PATH file,backup it
  if [ -f "$1" ]; then
    cp "$1" "${1}.bck"
    echo "backup $(basename "$1") to ${1}.bck"
  fi
  local msg_pre=${2:-'#'}
  local msg_suffix=${3:-''}
  local note="${msg_pre} $_WGC_FILE_NOTE $msg_suffix"
  echo -e "\n$note\n" >>"$1"
}

function _restore_file() {
  local origin_file_name origin_file_path
  origin_file_name=$(basename "$1" '.bck')
  origin_file_path="${1%/*}/$origin_file_name"
  if [ -f "${1}" ]; then
    mv "$1" "$origin_file_path" &&
      echo "restore file ${1} to $origin_file_name"
  else
    if [ -f "$origin_file_path" ]; then
      rm -rf "$origin_file_path"
    fi
    echo "not exists ${1}"
  fi
}

function _check_is_install_wgc() {
  if [ -d "$_INSTALL_PATH" ]; then
    echo "directory \"$_INSTALL_PATH\" exists,uninstall the wgc and then install it"
    exit 1
  fi
}

function _wgc_install_prompt() {
  _check_is_install_wgc
  _i_prompt
  [ ! -d "$_INSTALL_PATH" ] && mkdir "$_INSTALL_PATH"
  cp './bash/_prompt' "$_INSTALL_PATH/_prompt"
  _i_profile "source '${_INSTALL_PATH}/_prompt'"
  echo -e "\nprompt of wgc succeed install,the terminal needs to be restarted to run!"
}

function _wgc_install() {
  _check_is_install_wgc
  _i_alias
  _i_prompt

  cp -r "./bash/" "$_INSTALL_PATH/"

  _i_vimrc
  local start_path="${HOME}/.config/wgc/"
  # shellcheck disable=SC2154
  _i_profile "[[ -f '${start_path}main' ]] && source '${start_path}main'"
  echo -e "\nwgc succeed install\nterminal needs to be restarted to run!"
}

function _wgc_uninstall() {
  if [ -d "$_INSTALL_PATH" ]; then
    rm -rf "$_INSTALL_PATH"
    _restore_file "${_PROFILE_PATH}.bck" &&
      _restore_file "${HOME}/.vimrc.bck" &&
      _restore_file "/etc/profile.d/git-prompt.sh.bck" &&
      echo -e "\nwgc succeed  remove\nterminal needs to be restarted"
  else
    echo "not install wgc"
  fi
}

function _wgc_parse_options() {
  if [[ -z "$1" ]]; then
    _wgc_install
    return
  fi
  case "$1" in
  i | --install) _wgc_install ;;
  prompt | --prompt) _wgc_install_prompt ;;
  uni | --uninstall) _wgc_uninstall ;;
  *) _wgc_help ;;
  esac
}

_wgc_parse_options "$@"
